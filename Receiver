
#include <LiquidCrystal.h>
#include <Wire.h>
#include <string.h>
float oldAlarm;
int pos = 0;
char buffer[100];
int num = 0;
char temperature[50];
char humidity[50];
float alarmSet = 0;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);   // initialize the library with the numbers of the interface pins
void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  pinMode(6, OUTPUT);
  delay(500);
  lcd.begin(16, 2);
  lcd.display();
  // set up the LCD's number of columns and rows:
}
void loop() {
  // put your main code here, to run repeatedly:
  if (Serial.available() > 0)
  {
    int reading = Serial.read();         // read it and store it in 'val'
    if ( reading == '\r' )
    {
      //nothing
    }
    else if ( reading == '\n' )
    {
      buffer[pos] = '\0';
      pos = 0;
      processLine(buffer);
      printToLCD();
    }
    else
    {
      buffer[pos] = reading;
      pos++;
    }
  }
};


void printToLCD()
{
  alarmSet = analogRead(0) / 18;

  Serial.print("***");
  Serial.println(temperature);
  int tmp = atoi(temperature) ;
  Serial.println(tmp);
  float celsius = tmp * 0.0625;
  float fahrenheit = (1.8 * celsius) + 32;
  int f = (int) fahrenheit;
  Serial.println(celsius);
  Serial.println(f);
  //digitalRead(6);             // Reads the value of the pin, like below we are using a boolean
  if (celsius > alarmSet) {
    digitalWrite(6, HIGH);    // This writes a high to a pin or 5v
  }
  else {
    digitalWrite(6, LOW);     // This writes a low to a pin or grounds it
  }

  if (alarmSet == oldAlarm)
  {
    // Display celsius on the top row
    lcd.setCursor(0, 0);
    //1234567890123456 digits for spaces on row
    lcd.print("Temp in C= ");
    lcd.print(celsius);
    // Display fahrenheit to the bottom row
    lcd.setCursor(0, 1);
    //1234567890123456 digits for spaces on row
    lcd.print("Temp in F= ");
    lcd.print(fahrenheit);
    // Turn on the display:
    Serial.println("the Alarm is ");
    Serial.print(alarmSet);
    Serial.println();
  }
  else
  {
    lcd.clear();
    lcd.setCursor(0, 0);
    //1234567890123456 digits for spaces on row
    lcd.print("Alarm temp= ");
    lcd.print(alarmSet);
    // Display fahrenheit to the bottom row
    lcd.setCursor(0, 1);
    //1234567890123456 digits for spaces on row
    lcd.print("  Please wait");

    // Turn on the display:
    Serial.println("The alarm Changed and the display froze");
    Serial.print(alarmSet);
    Serial.println();


    delay(500);
    oldAlarm = alarmSet;

  }
};

void processLine(char *s)
{
  int number = 0;
  Serial.print(num++);
  Serial.print(" ");
  Serial.println(s);

  char *f;
  char buffer[100];
  char *t = buffer;
  strcpy(t, s);

  Serial.print("* ");
  Serial.println(t);

  for (;;)
  {
    f = strsep(&t, ",");
    if (f == NULL)
    {
      Serial.println("f==NULL");
      break;
    }
    else
    {
      if (number == 0)
      {
        strcpy(temperature, f);
      }
      /* else if (number == 1)
        {
         strcpy(humidity, f);                     More sensors
        }
      */
      //  Serial.print(number++);
      //  Serial.print(" ");
      //  Serial.println(f);
    }

  }
}
